Kurz Bio:
Karl Heinz Marbaise ist seit ca. 25 Jahren im Bereich der Softwareentwicklung tätig. Seit ca. 20 Jahren beschäftigt 
er sich mit Versionskontrollsystemen wie mit RCS, CVS, ClearCase und später mit Subversion und Git. 
Er führt seit Jahren Beratungen und Trainings im Bereich Software Konfigurationsmanagement (Subversion, Branching Strategien, 
Migrationsberatung), Build Management (Ant, Maven, Hudson/Jenkins) und Entwicklungsprozesse durch. Weiterhin hält 
er auf verschiedensten Konferenzen (z.B. Subersion Konferenz, GearConf) zu entsprechenden Themengebieten Vorträge.


Beschreibung:

Im Rahmen des Vortrages sollen die Grundlagen des Software Konfigurationsmanagements (SKM) vorgestellt werden. Es wird 
geklärt was SKM ist und wo es seine Anwendung findet. Weiterhin wird dargestellt, welcher Zusammenhang zwischen
Versions-, Release-, Build- und Deployment Managmenet besteht und wie die unterschiedlichen Bereiche in einem Projekt
aufgestellt sind. Welche Rolle spielen Versionskontrollsystem? Ist der Einsatz von Versionskontrollsystemen überhaupt
Notwendig? Welche Vor- und Nachteile hat der Einsatz
von Branching Strategien? Was ist mit so Dingen wie Continious Integration? Warum überhaupt CI?

- SCM Vortrag auf der JUGF 25. Mai 2011
 
- Was ist Software Configurations Management?
  - Management Disziplin?

- Kleine Betrachtung der Historie
  - Warum?

    Nichts ist so stetig wie die Änderung!

   Zusammenhang
     Versionsmanagement,
     Buildmanagement,
     Releasemanagement
     Deploymentmanagement

- Versionsmanagement
  - Ausprägungen 
    - Versionskontroll Tools
      RCS, CVS, SVN, Git, Mercurial, Bazaar, Monotone
      Grundlegende Unterschiede DVCS und CVCS
      - Decentralized Version Control Systems (DVCS) (Git, Mercurial, Bazaar, Monoton?)
      - Centralized Version Control Systems (CVCS) (CVS, SVN, ClearCase, PVCS, MKS ?)
    - Konzeptionelle Unterschiede
      2-5 Folien
      A fool with a tool is just a fool!

  - Branching Strategien
    - Entkopplung Release / Development
      - Release Branch 
    - Entkopplung Deployment / Release
    - Projektplanung
    - Bug Fix Branches
    - Feature Branching
    - Integrationslinien
   3-5 Folien zu Strategien

- Build Managemet
  - Build Systeme
    - Ant (Ivy ?), Maven, Gradle, Buildr etc.
    - Eventuelle Nexus im Zusammenhang mit Maven?
   - 3-5 Folien Tools (Konzepte- und Gegenüberstellung?)

- Continious Integration
  - Warum überhaupt CI?
  - Was ist CI überhaupt?
    - Jeder Build ist ein Release Build!
  - Kurzer Überblick was sind CI Systeme
    Beispiel Hudson/Jenkins
    3-5 Folien

 - Continious Deployment
   - What is CD?

Links:
http://de.wikipedia.org/wiki/Revision_Control_System
http://wwwipd.ira.uka.de/~tichy/scm/SCMBosch2/sld001.htm
http://de.wikipedia.org/wiki/Versionsverwaltung
http://de.wikipedia.org/wiki/Versionsnummer

http://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/

http://sccs.berlios.de/
http://better-scm.berlios.de/comparison/comparison.html

